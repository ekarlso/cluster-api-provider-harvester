---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: infraclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: HarvesterClusterTemplate
    listKind: HarvesterClusterTemplateList
    plural: infraclustertemplates
    shortNames:
    - ict
    singular: harvesterclustertemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HarvesterClusterTemplate is the Schema for the infraclustertemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: HarvesterClusterTemplateSpec defines the desired state of
              HarvesterClusterTemplate.
            properties:
              template:
                properties:
                  metadata:
                    description: |-
                      Standard object's metadata.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    description: HarvesterClusterSpec defines the desired state of
                      HarvesterCluster.
                    properties:
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      identitySecret:
                        description: IdentitySecret is the name of the Secret containing
                          HarvesterKubeConfig file.
                        properties:
                          name:
                            description: Name is the name of the required Identity
                              Secret.
                            type: string
                          namespace:
                            description: Namespace is the namespace in which the required
                              Identity Secret should be found.
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      loadBalancerConfig:
                        description: LoadBalancerConfig describes how the load balancer
                          should be created in Harvester.
                        properties:
                          description:
                            description: Description is a description of the load
                              balancer that should be created.
                            type: string
                          ipPool:
                            description: |-
                              IpPool defines a new IpPool that will be added to Harvester.
                              This field is mutually exclusive with "IpPoolRef".
                            properties:
                              gateway:
                                description: |-
                                  Gateway is the IP Address that should be used by the Gateway on the Subnet. It should be a valid address inside the subnet.
                                  e.g. 172.17.1.1.
                                type: string
                              subnet:
                                description: |-
                                  Subnet is a string describing the subnet that should be used by the IP Pool, it should have the CIDR Format of an IPv4 Address.
                                  e.g. 172.17.1.0/24.
                                type: string
                              vmNetwork:
                                description: |-
                                  VMNetwork is the name of an existing VM Network in Harvester where the IPPool should exist.
                                  The reference can have the format "namespace/name" or just "name" if the object is in the same namespace as the HarvesterCluster.
                                type: string
                            required:
                            - gateway
                            - subnet
                            - vmNetwork
                            type: object
                          ipPoolRef:
                            description: |-
                              IpPoolRef is a reference to an existing IpPool object in Harvester's cluster.
                              This field is mutually exclusive with "ipPool".
                              TODO: To be implemented
                            type: string
                          ipamType:
                            description: |-
                              IPAMType is the configuration of IP addressing for the control plane load balancer.
                              This can take two values, either "dhcp" or "ippool".
                            enum:
                            - dhcp
                            - pool
                            type: string
                          listeners:
                            description: Listeners is a list of listeners that should
                              be created on the load balancer.
                            items:
                              description: Listener is a description of a new Listener
                                to be created on the Load Balancer.
                              properties:
                                backendPort:
                                  description: TargetPort is the port that the listener
                                    should forward traffic to.
                                  format: int32
                                  type: integer
                                name:
                                  description: Name is the name of the listener.
                                  type: string
                                port:
                                  description: Port is the port that the listener
                                    should listen on.
                                  format: int32
                                  type: integer
                                protocol:
                                  default: TCP
                                  description: Protocol is the protocol that the listener
                                    should use, either TCP or UDP.
                                  enum:
                                  - TCP
                                  - UDP
                                  type: string
                              required:
                              - backendPort
                              - name
                              - port
                              - protocol
                              type: object
                            type: array
                        required:
                        - ipamType
                        type: object
                      server:
                        description: Server is the url to connect to Harvester.
                        type: string
                      targetNamespace:
                        description: TargetNamespace is the namespace on the Harvester
                          cluster where VMs, Load Balancers, etc. should be created.
                        type: string
                    required:
                    - identitySecret
                    - loadBalancerConfig
                    - targetNamespace
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
